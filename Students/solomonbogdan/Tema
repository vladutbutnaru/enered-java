package com.enered.examples;
 +
 +public class Main {
 +	public static void main(String args[]){
 +		int x = 100;
 +		//Calculati si afisati suma primelor x numere pare (folosind o structura repetitiva
 +		
                   public class Main {
	
	public static void main(String args[]){
		
		int x = 100;
		
		int sum=0;
		
		for (int i  =0; i<=x ;  i++){
			
			if (i%2==0){
				sum = sum +i;
				
				System.out.println(sum);
			}
			
			
		}
 +		
 +		int[] numereFaine = {1,2,3,8,50,120,400,7,3,3,90,-4,-124,824,0};
 +		//Fie vectorul numereFaine. Calculati si afisati minimul, maximul si media aritmetica a elementelor lui.
 +

    public static void main(String args[]){
		
		
		int[] numereFaine = {1,2,3,8,50,120,400,7,3,3,90,-4,-124,824,0};
		
		int min=0;
		int max=0;
		int media =0;
	
		for (int i =0 ; i<numereFaine.length; i++){
			
			if (numereFaine[i]>max){
				
				System.out.println("Maximul este "+ numereFaine[i]);
				
			}else if (numereFaine[i]<min){
				System.out.println("minimul este "+ numereFaine[i]);
				
				media = (media + i)% numereFaine.length;
				
				System.out.println("media aritmetica este " +media);
                				
		
		
		
		
		
			}

                String[] cuvinte = {"nume","mers","activitate","sofer","tablou","caiet","program"};
 +		//Fie vectorul cuvinte. Adaugati fiecarui cuvant din el prefixul "pre" si sufixul "lui" si afisati-le, despartite prin caracterul ","
 +		
 +		
 +		int numarator = 7;
 +		int numitor = 3;
 +		//Avand numaratorul si numitorul de mai sus, calculati si afisati catul si restul impartirii lor
 +		
                 public static void main(String args[]){
		
		int numarator = 7;
		int numitor = 3;
		
		int catul;
		int restul;
		
		catul = numarator/numitor;
		restul = numarator%numitor;
		
		System.out.println("Catul impartirii este "+ catul);
		System.out.println("Restul impartirii este "+ restul);
		
                				
		}

 +		
 +		//Folosind vectorul numereFaine de mai sus, inlocuiti elementele impare cu numarul 0
 +		
 +		
 +		int[][] matrice = new int[2][2];
 +		matrice[0][0] = 1;
 +		matrice[0][1] = 2;
 +		matrice[1][0] = 2;
 +		matrice[1][1] = 7;
 +		//Avand matricea de mai sus, calculati si afisati produsul numerelor de pe diagonala principala, impartit la produsul numerelor de pe diagonala secundara
 +		
 +		
 +		//Creati un vector de cuvinte, apoi concatenati-le pentru a alcatui 2 propozitii corecte dpdv gramatical (si afisati-le)
 +		
 +		
 +		//Calculati (printr-o instructiune repetitiva) si afisati 8! (factorial)



 +		public static void main (String [] args){
	
	        int factorial=1;
	
	        for(int i=1;i<=8;i++){
		
		factorial = factorial*i;
		
		System.out.println(factorial); 
		
	}
 +		
 +		double[] vectorFain = {2.1,5.4,4.3,9.8,7.11,4.13,8,9,-4.2,48};
 +		//Folosind vectorFain, creati un alt vector al carui elemente sa fie egale cu formula (element * pozitieElement) din vectorul principal
 +		//ex: vectorNou[0] = 2.1 (elementul de pe pozitia 0 din vectorFain) * 0 (pozitia lui)
 +		//ex2: vectorNou[4] = 7.11 * 4 ...etc
 +		
 +		
 +	}
